< Python programming language dictionarys >

## Copyright: anonymouse (사용자 모두가 변조및 참조 이용 가능)
## License: GPL-2.0+

# getpass (패스워드)
import getpass	# getpass (패스워드)
pswd=getpass.getpass()	# getpass (패스워드)
Password: 	# getpass (패스워드)
pswd	# getpass (패스워드)
'qwerasdf'	# getpass (패스워드)

import subprocess

a = subprocess.check_output ('cat file' , shell=True) # 서브process 응용
if a == 'A' :	# 서브process 응용
    print "1"	# 서브process 응용
elif result == 'B' :	# 서브process 응용
    a "2"	# 서브process 응용

-- argv 
# -*- coding: utf-8 -*-              #ldic-argv구현
import sys # sys 모듈 로드              #ldic-argv구현

# 문자열로서 명령 필드1 을 변수로써 인식한다.               #ldic-argv구현
insert = str(sys.argv[1])              #ldic-argv구현

# 명령행 필드1에 1을 입력했을 경우 지정              #ldic-argv구현
if insert == '1':              #ldic-argv구현
	print('Good!')              #ldic-argv구현
else:              #ldic-argv구현
# 만일 1이 아닐경우 입력한 그대로를 출력한다.              #ldic-argv구현
	print('Sorry you insert '+sys.argv[1])              #ldic-argv구현

-- eval, random,time, os
#-*- coding:utf-8 -*-              #ldic-eval, random, time, os구현
import random	# 난수 생성 라이브러리 호출              #ldic-eval, random, time, os구현
import time		# 시간을 재는 라이브러리 호출              #ldic-eval, random, time, os구현
import os, sys	# 시스템 명령어를 수행하는 라이브러리 호출              #ldic-eval, random, time, os구현
s1 = time.time()	# 처음 시작 시간을 체크 하여 변수로 저장 한다.              #ldic-eval, random, time, os구현
n = 0		# 문제 번호를 기억할 변수를 지정한다.              #ldic-eval, random, time, os구현
win = 0	# 정답 횟수를 기억할 변수를 지정한다.              #ldic-eval, random, time, os구현
lose = 0 	# 틀린 횟수를 기억할 변수를 지정한다.              #ldic-eval, random, time, os구현
def math_teacher():	# 문제를 발생 시킬 인공지능 함수를 설계              #ldic-eval, random, time, os구현
	a = random.randint(1, 3)		# 기호를 랜덤으로 발생 시킬 변수              #ldic-eval, random, time, os구현
	b = random.randint(1, 100)	# 계산식 필드 1을 1~100 까지의 난수로 발생 시킬 변수              #ldic-eval, random, time, os구현
	c = random.randint(1, 100)	# 계산식 필드 2을 1~100 까지의 난수로 발생 시킬 변수              #ldic-eval, random, time, os구현
	              #ldic-eval, random, time, os구현
	q = str(b) 				# 전체 함수를 변수 q로 사용 할수 있도록 변수 b부터 시작하며 b를 문자열로 전환한다.               #ldic-eval, random, time, os구현
	if a == 3:              #ldic-eval, random, time, os구현
		q = q + "*"			# a 변수가 3일 경우 곱하기 발생              #ldic-eval, random, time, os구현
	if a == 1:              #ldic-eval, random, time, os구현
		q = q + "+"			# a 변수가 1 일 경우 더하기 발생              #ldic-eval, random, time, os구현
	if a == 2:              #ldic-eval, random, time, os구현
		q = q + "-"			# a 변수가 2 일 경우 빼기 발생              #ldic-eval, random, time, os구현
	q = q + str(c)              #ldic-eval, random, time, os구현
	return q				# 함수에서 q변수를 외부에서 응용 할수 있도록 반환 한다.              #ldic-eval, random, time, os구현
os.system('clear')			# 콘솔화면을 정리하는 쉘 명령 실행              #ldic-eval, random, time, os구현
for i in xrange(10):			# 10번을 수행하는 지정 루프를 수행               #ldic-eval, random, time, os구현
	n = n + 1				# 변수 n(문제 번호)에 1을 추가              #ldic-eval, random, time, os구현
	qu = "문제 "              #ldic-eval, random, time, os구현
	qup = "(*)는 곱하기 입니다."              #ldic-eval, random, time, os구현
	que = str(qu) + str(n)              #ldic-eval, random, time, os구현
	print(qup)              #ldic-eval, random, time, os구현
	print(que)              #ldic-eval, random, time, os구현
	print("")              #ldic-eval, random, time, os구현
	q = math_teacher()		# 변수 q에 math_teacher()함수를 지정              #ldic-eval, random, time, os구현
	print(q)				              #ldic-eval, random, time, os구현
	print("")              #ldic-eval, random, time, os구현
	print("정답을 입력 하세요.")		              #ldic-eval, random, time, os구현
	inp = input("∴ ")              #ldic-eval, random, time, os구현
	inp = int(inp)			# 입력을 받은 숫자를 정수로 변환한다.              #ldic-eval, random, time, os구현
	os.system('clear')              #ldic-eval, random, time, os구현
	if eval(q) == inp:		# 'eval' 지정 함수는 문자열을 파이썬 프로세스가 계산할수 있도록 해 주며 사용자 입력값이 틀린지 프로세스가 판단                #ldic-eval, random, time, os구현
		print("이전 문제 정답!")	# 정답일 경우               #ldic-eval, random, time, os구현
		win = win + 1              #ldic-eval, random, time, os구현
	else:					# 틀릴 경우              #ldic-eval, random, time, os구현
		print("이전 문제 틀림!")	              #ldic-eval, random, time, os구현
		lose = lose + 1              #ldic-eval, random, time, os구현
		eq = eval(q)              #ldic-eval, random, time, os구현
		eq = str(eq)              #ldic-eval, random, time, os구현
		print("이전 문제 정답 =" + eq)              #ldic-eval, random, time, os구현
	wi = str(win)              #ldic-eval, random, time, os구현
	lo = str(lose)              #ldic-eval, random, time, os구현
	print("현재 점수는 정답: " + wi + "개, 틀린답 " + lo + "개")              #ldic-eval, random, time, os구현
s2 = time.time()		# 문제 풀이가 전부 끝나고 끝난 시간을 체크              #ldic-eval, random, time, os구현
st = s2-s1			# 끝난 시간 - 시작 시간을 계산              #ldic-eval, random, time, os구현
stst = str(st)		              #ldic-eval, random, time, os구현
print("문제를 전부 푼 시간은" + stst + "초 이며")              #ldic-eval, random, time, os구현
end = win*10		# 점수 계산을 수행               #ldic-eval, random, time, os구현
endt = str(end)              #ldic-eval, random, time, os구현
print("당신의 점수는 " + endt + "입니다.")        #ldic-write file      #ldic-eval, random, time, os구현
--

python -m py_compile c.py	# 파이썬 컴파일 

- write text to file -      
wf = open("a.txt", 'w')              #ldic-write file
text= "hello" % i              #ldic-write file
wf.write(text)              #ldic-write file
wf.close()              #ldic-write file
--              

-- read file --
rf = open("/home/administrator/glotto-2017-06-03-17-53-06", 'r')              #ldic-read file
text = rf.read()              #ldic-read file
print(text)              #ldic-read file
rf.close()              #ldic-read file
--
